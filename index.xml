<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Yoni&#39;s Shorts</title>
    <link>https://shorts.yonispants.com/</link>
    <description>Recent content on Yoni&#39;s Shorts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 22 Aug 2021 22:08:12 +0300</lastBuildDate>
    
        <atom:link href="https://shorts.yonispants.com/index.xml" rel="self" type="application/rss+xml" />
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>How to Build This Blog</title>
        <link>https://shorts.yonispants.com/how-to-build-this-blog/</link>
        <pubDate>Sun, 22 Aug 2021 22:08:12 +0300</pubDate>
        
        <atom:modified>Sun, 22 Aug 2021 22:08:12 +0300</atom:modified>
        <guid>https://shorts.yonispants.com/how-to-build-this-blog/</guid>
        <description>How I built this blog using Hugo.</description>
        <content:encoded>&lt;p&gt;For this blog, I chose &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. The reason I chose Hugo is that &lt;a href=&#34;https://www.mrnice.dev/&#34;&gt;that&amp;rsquo;s what Shay Nehmad is using&lt;/a&gt;. ü§∑&lt;/p&gt;
&lt;p&gt;Hugo is a static site generator, which means the site is not served by a server which runs code (like Wordpress) - instead, it&amp;rsquo;s served by a server which serves static files only. I write new posts in Markdown format, and then I use Hugo to rebuild the site.&lt;/p&gt;
&lt;p&gt;In my experience, using Hugo is &lt;strong&gt;not&lt;/strong&gt; as straightforward as using traditional blogging platforms (like Wordpress), and you &lt;strong&gt;do&lt;/strong&gt; need to have some coding experience. I&amp;rsquo;ve had to learn some things about how Hugo works in order to develop this blog. I&amp;rsquo;ve even learned about &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Submodules&#34;&gt;Git submodules&lt;/a&gt;! üòÅ&lt;/p&gt;
&lt;p&gt;I got started by reading Shay&amp;rsquo;s post, &lt;a href=&#34;https://www.mrnice.dev/posts/how-to-build-this-blog/&#34;&gt;&amp;ldquo;How to Build This Blog&amp;rdquo;&lt;/a&gt;. Then, I looked at Hugo&amp;rsquo;s &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;theme library&lt;/a&gt;, and chose the theme &lt;a href=&#34;https://themes.gohugo.io/themes/hugo-theme-zzo/&#34;&gt;Zzo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In Hugo, you are kind of married to the theme you choose. Once I chose Zzo, I had to set up a lot of &lt;a href=&#34;https://zzo-docs.vercel.app/zzo/configuration/params.toml/&#34;&gt;Zzo-specific configuration&lt;/a&gt;. Besides reading the documentation of the theme and of Hugo itself, another trick that proved useful was to look at the templates/partials themselves (in the Zzo source code) to figure out what site element is controlled by what configuration.&lt;/p&gt;
&lt;p&gt;In addition to configuration, I&amp;rsquo;ve had to change some behavior / fix bugs in Zzo itself. To do this, I&amp;rsquo;ve &lt;a href=&#34;https://github.com/yoni1/hugo-theme-zzo&#34;&gt;forked the Zzo repo&lt;/a&gt;, made the changes there, and &lt;a href=&#34;https://github.com/zzossig/hugo-theme-zzo/pulls?q=author%3Ayoni1&#34;&gt;opened a few pull requests&lt;/a&gt; to contribute the fixes back upstream. I&amp;rsquo;ve detailed an example below:&lt;/p&gt;
&lt;h2 id=&#34;reading-time-as-shorts-size&#34;&gt;&amp;ldquo;Reading time&amp;rdquo; as &amp;ldquo;Shorts Size&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;By default, Zzo shows the reading time like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚òï 5 min read&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Instead of this, suppose that we want to have:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ü©≥ Size M&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;step-1-finding-where-things-are&#34;&gt;Step 1: Finding where things are&lt;/h3&gt;
&lt;p&gt;Even without knowing anything about the code, we know that the string &lt;code&gt;&amp;quot;min read&amp;quot;&lt;/code&gt; must be referenced somewhere. Looking for it in the entire source code of the theme, we find it in the file &lt;a href=&#34;https://github.com/zzossig/hugo-theme-zzo/blob/master/i18n/en.toml&#34;&gt;&lt;code&gt;i18n/en.toml&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reading&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;min read&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This tells us it&amp;rsquo;d be a good idea to search for &lt;code&gt;&amp;quot;reading-time&amp;quot;&lt;/code&gt;, and indeed, we find it in 4 places:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zzossig/hugo-theme-zzo/blob/master/layouts/partials/body/infos.html&#34;&gt;&lt;code&gt;layouts/partials/body/infos.html&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zzossig/hugo-theme-zzo/blob/master/layouts/partials/summary/card.html&#34;&gt;&lt;code&gt;layouts/partials/summary/card.html&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zzossig/hugo-theme-zzo/blob/master/layouts/partials/summary/classic.html&#34;&gt;&lt;code&gt;layouts/partials/summary/classic.html&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zzossig/hugo-theme-zzo/blob/master/layouts/partials/summary/compact.html&#34;&gt;&lt;code&gt;layouts/partials/summary/compact.html&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These 4 places correspond to all four ways that the reading time may be shown: Inside a page, or in 3 different styles of page summaries.&lt;/p&gt;
&lt;h3 id=&#34;step-2-fixing-the-theme&#34;&gt;Step 2: Fixing the theme&lt;/h3&gt;
&lt;p&gt;The code which refers to &lt;code&gt;&amp;quot;reading-time&amp;quot;&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ .ReadingTime }} {{ i18n &amp;quot;reading-time&amp;quot; }}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We see that it is hardcoded in the template that the number appears before the string. That&amp;rsquo;s no good for us - we want the number to be a parameter for the &lt;code&gt;&amp;quot;reading-time&amp;quot;&lt;/code&gt; string. Fortunately, Hugo can do this - and it is even &lt;a href=&#34;https://gohugo.io/content-management/multilingual/#query-a-singularplural-translation&#34;&gt;a standard example in the documentation&lt;/a&gt;. Basically, you pass it as a parameter like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ i18n &amp;quot;reading-time&amp;quot; .ReadingTime }}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And modify the i18n string like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reading&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ .Count }} min read&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;With this knowledge, I made the necessary changes and &lt;a href=&#34;https://github.com/zzossig/hugo-theme-zzo/pull/438/files&#34;&gt;submitted a pull request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By the way, while we&amp;rsquo;re looking at these partials, we can see where the ‚òï emoji comes from:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ ($.Site.Params.readingTimeIcon | safeHTML) | default &amp;quot;‚òï&amp;quot; }}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This indicates we can control the emoji by changing the &lt;code&gt;readingTimeIcon&lt;/code&gt; site configuration, which indeed appears in Zzo&amp;rsquo;s sample &lt;a href=&#34;https://github.com/zzossig/hugo-theme-zzo/blob/master/exampleSite/config/_default/params.toml&#34;&gt;&lt;code&gt;params.toml&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt;
&lt;h3 id=&#34;step-3-defining-the-string&#34;&gt;Step 3: Defining the string&lt;/h3&gt;
&lt;p&gt;After reading &lt;a href=&#34;https://pkg.go.dev/text/template#hdr-Functions&#34;&gt;some more documentation&lt;/a&gt; (this time it&amp;rsquo;s of Go&amp;rsquo;s &lt;code&gt;template&lt;/code&gt; package), I was ready to define the string. To do this, I had to define my own &lt;code&gt;i18n/en.toml&lt;/code&gt;. The way Hugo works is it evaluates the site&amp;rsquo;s files first, and at the theme&amp;rsquo;s files afterwards; so I just created this path and file in the root of my site.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tooltip&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reading&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Shorts Size&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reading&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Size \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    {{ if eq .Count 1 }} \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        XS \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    {{ else if eq .Count 2 3 }} \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        S \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    {{ else if eq .Count 4 5 6 }} \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        M \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    {{ else if eq .Count 7 8 9 10 }} \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        L \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    {{ else }} \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        XL \
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    {{ end }}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;And that&amp;rsquo;s it - this finally achieves what we wanted.&lt;/p&gt;
</content:encoded>
        <dc:creator>Yoni</dc:creator>
        
        
        
        
          
            
              <category>Hugo</category>
            
          
            
              <category>Yoni&#39;s Shorts</category>
            
          
        
        
          
            
              <category>Blogging</category>
            
          
        
        
      </item>
      
      <item>
        <title>Hello, world</title>
        <link>https://shorts.yonispants.com/hello/</link>
        <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
        
        <atom:modified>Sat, 21 Aug 2021 00:00:00 +0000</atom:modified>
        <guid>https://shorts.yonispants.com/hello/</guid>
        <description>Hello, world. Starting a new blog today!</description>
        <content:encoded>&lt;p&gt;Hello, world. Starting a new blog today!&lt;/p&gt;
&lt;h1 id=&#34;why-blog&#34;&gt;Why blog?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I already publish a bunch of stuff on &lt;a href=&#34;https://www.facebook.com/yoniyoni&#34;&gt;my Facebook profile&lt;/a&gt;, and wished that my posts get a home of their own.&lt;/li&gt;
&lt;li&gt;I feel like it.&lt;/li&gt;
&lt;li&gt;I had an &lt;a href=&#34;https://zeroflag.wordpress.com/&#34;&gt;unsuccessful Wordpress blog&lt;/a&gt; in 2007-2008, and want to try to make it better this time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;what-blog&#34;&gt;What blog?&lt;/h1&gt;
&lt;p&gt;I plan on posting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Math stuff.&lt;/li&gt;
&lt;li&gt;Programming &amp;amp; technology stuff.&lt;/li&gt;
&lt;li&gt;Projects and stuff.&lt;/li&gt;
&lt;li&gt;Stuff I&amp;rsquo;ll copy from my past posts on Facebook.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Arbitrarily, some posts will be in English, and some in Hebrew.&lt;/p&gt;
&lt;h1 id=&#34;how-blog&#34;&gt;How blog?&lt;/h1&gt;
&lt;p&gt;For this blog, I chose &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. The reason I chose Hugo is that &lt;a href=&#34;https://www.mrnice.dev/&#34;&gt;that&amp;rsquo;s what Shay Nehmad is using&lt;/a&gt;. ü§∑&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll write more about it in my &lt;a href=&#34;https://shorts.yonispants.com/how-to-build-this-blog/&#34;&gt;next post&lt;/a&gt;.&lt;/p&gt;
</content:encoded>
        <dc:creator>Yoni</dc:creator>
        
        
        
        
          
            
              <category>Yoni&#39;s Shorts</category>
            
          
            
              <category>Hugo</category>
            
          
        
        
          
            
              <category>Blogging</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
